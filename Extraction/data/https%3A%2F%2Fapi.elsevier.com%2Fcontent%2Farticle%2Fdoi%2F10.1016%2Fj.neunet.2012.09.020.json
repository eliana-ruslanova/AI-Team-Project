{"coredata": {"prism:url": "https://api.elsevier.com/content/article/pii/S0893608012002614", "dc:identifier": "doi:10.1016/j.neunet.2012.09.020", "eid": "1-s2.0-S0893608012002614", "prism:doi": "10.1016/j.neunet.2012.09.020", "pii": "S0893-6080(12)00261-4", "dc:title": "The No-Prop algorithm: A new learning algorithm for multilayer neural networks ", "prism:publicationName": "Neural Networks", "prism:aggregationType": "Journal", "prism:issn": "08936080", "prism:volume": "37", "prism:startingPage": "182", "prism:endingPage": "188", "prism:pageRange": "182-188", "dc:format": "application/json", "prism:coverDate": "2013-01-31", "prism:coverDisplayDate": "January 2013", "prism:copyright": "Copyright \u00a9 2012 Elsevier Ltd. All rights reserved.", "prism:publisher": "Elsevier Ltd.", "prism:issueName": "Twenty-fifth Anniversay Commemorative Issue", "dc:creator": [{"@_fa": "true", "$": "Widrow, Bernard"}, {"@_fa": "true", "$": "Greenblatt, Aaron"}, {"@_fa": "true", "$": "Kim, Youngsik"}, {"@_fa": "true", "$": "Park, Dookun"}], "dc:description": "\n               Abstract\n               \n                  A new learning algorithm for multilayer neural networks that we have named No-Propagation (No-Prop) is hereby introduced. With this algorithm, the weights of the hidden-layer neurons are set and fixed with random values. Only the weights of the output-layer neurons are trained, using steepest descent to minimize mean square error, with the LMS algorithm of Widrow and Hoff. The purpose of introducing nonlinearity with the hidden layers is examined from the point of view of Least Mean Square Error Capacity (LMS Capacity), which is defined as the maximum number of distinct patterns that can be trained into the network with zero error. This is shown to be equal to the number of weights of each of the output-layer neurons. The No-Prop algorithm and the Back-Prop algorithm are compared. Our experience with No-Prop is limited, but from the several examples presented here, it seems that the performance regarding training and generalization of both algorithms is essentially the same when the number of training patterns is less than or equal to LMS Capacity. When the number of training patterns exceeds Capacity, Back-Prop is generally the better performer. But equivalent performance can be obtained with No-Prop by increasing the network Capacity by increasing the number of neurons in the hidden layer that drives the output layer. The No-Prop algorithm is much simpler and easier to implement than Back-Prop. Also, it converges much faster. It is too early to definitively say where to use one or the other of these algorithms. This is still a work in progress.\n               \n            ", "openaccess": "0", "openaccessArticle": false, "openaccessType": null, "openArchiveArticle": false, "openaccessSponsorName": null, "openaccessSponsorType": null, "openaccessUserLicense": null, "dcterms:subject": [{"@_fa": "true", "$": "Neural networks"}, {"@_fa": "true", "$": "Training algorithm"}, {"@_fa": "true", "$": "Backpropagation"}], "link": [{"@href": "https://api.elsevier.com/content/article/pii/S0893608012002614", "@rel": "self", "@_fa": "true"}, {"@href": "https://www.sciencedirect.com/science/article/pii/S0893608012002614", "@rel": "scidir", "@_fa": "true"}]}, "scopus-id": "84870473129", "scopus-eid": "2-s2.0-84870473129", "pubmed-id": "23140797", "link": {"@href": "https://api.elsevier.com/content/abstract/scopus_id/84870473129", "@rel": "abstract"}, "originalText": {"xocs:doc": {"xocs:meta": {"xocs:open-access": {"xocs:oa-article-status": {"@is-open-access": "0", "@is-open-archive": "0"}}, "xocs:available-online-date": {"@yyyymmdd": "20121015", "$": "2012-10-15"}}}}}