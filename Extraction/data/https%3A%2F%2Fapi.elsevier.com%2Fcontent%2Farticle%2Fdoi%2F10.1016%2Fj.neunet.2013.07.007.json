{"coredata": {"prism:url": "https://api.elsevier.com/content/article/pii/S0893608013001937", "dc:identifier": "doi:10.1016/j.neunet.2013.07.007", "eid": "1-s2.0-S0893608013001937", "prism:doi": "10.1016/j.neunet.2013.07.007", "pii": "S0893-6080(13)00193-7", "dc:title": "Solving graph data issues using a layered architecture approach with applications to web spam detection ", "prism:publicationName": "Neural Networks", "prism:aggregationType": "Journal", "prism:issn": "08936080", "prism:volume": "48", "prism:startingPage": "78", "prism:endingPage": "90", "prism:pageRange": "78-90", "dc:format": "application/json", "prism:coverDate": "2013-12-31", "prism:coverDisplayDate": "December 2013", "prism:copyright": "Copyright \u00a9 2013 Elsevier Ltd. All rights reserved.", "prism:publisher": "Elsevier Ltd.", "dc:creator": [{"@_fa": "true", "$": "Scarselli, Franco"}, {"@_fa": "true", "$": "Tsoi, Ah Chung"}, {"@_fa": "true", "$": "Hagenbuchner, Markus"}, {"@_fa": "true", "$": "Noi, Lucia Di"}], "dc:description": "\n               Abstract\n               \n                  This paper proposes the combination of two state-of-the-art algorithms for processing graph input data, viz., the probabilistic mapping graph self organizing map, an unsupervised learning approach, and the graph neural network, a supervised learning approach. We organize these two algorithms in a cascade architecture containing a probabilistic mapping graph self organizing map, and a graph neural network. We show that this combined approach helps us to limit the long-term dependency problem that exists when training the graph neural network resulting in an overall improvement in performance. This is demonstrated in an application to a benchmark problem requiring the detection of spam in a relatively large set of web sites. It is found that the proposed method produces results which reach the state of the art when compared with some of the best results obtained by others using quite different approaches. A particular strength of our method is its applicability towards any input domain which can be represented as a graph.\n               \n            ", "openaccess": "0", "openaccessArticle": false, "openaccessType": null, "openArchiveArticle": false, "openaccessSponsorName": null, "openaccessSponsorType": null, "openaccessUserLicense": null, "dcterms:subject": [{"@_fa": "true", "$": "Graph neural network"}, {"@_fa": "true", "$": "Probability Mapping GraphSOM"}, {"@_fa": "true", "$": "Layered architecture"}, {"@_fa": "true", "$": "Web spam detection"}], "link": [{"@href": "https://api.elsevier.com/content/article/pii/S0893608013001937", "@rel": "self", "@_fa": "true"}, {"@href": "https://www.sciencedirect.com/science/article/pii/S0893608013001937", "@rel": "scidir", "@_fa": "true"}]}, "scopus-id": "84882934363", "scopus-eid": "2-s2.0-84882934363", "pubmed-id": "23973870", "link": {"@href": "https://api.elsevier.com/content/abstract/scopus_id/84882934363", "@rel": "abstract"}, "originalText": {"xocs:doc": {"xocs:meta": {"xocs:open-access": {"xocs:oa-article-status": {"@is-open-access": "0", "@is-open-archive": "0"}}, "xocs:available-online-date": {"@yyyymmdd": "20130803", "$": "2013-08-03"}}}}}