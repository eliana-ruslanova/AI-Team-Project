{"coredata": {"prism:url": "https://api.elsevier.com/content/article/pii/S0893608007002730", "dc:identifier": "doi:10.1016/j.neunet.2007.12.036", "eid": "1-s2.0-S0893608007002730", "prism:doi": "10.1016/j.neunet.2007.12.036", "pii": "S0893-6080(07)00273-0", "dc:title": "A learning rule for very simple universal approximators consisting of a single layer of perceptrons ", "prism:publicationName": "Neural Networks", "prism:aggregationType": "Journal", "prism:issn": "08936080", "prism:volume": "21", "prism:issueIdentifier": "5", "prism:startingPage": "786", "prism:endingPage": "795", "prism:pageRange": "786-795", "prism:number": "5", "dc:format": "application/json", "prism:coverDate": "2008-06-30", "prism:coverDisplayDate": "June 2008", "prism:copyright": "Copyright \u00a9 2008 Elsevier Ltd. All rights reserved.", "prism:publisher": "Elsevier Ltd.", "dc:creator": [{"@_fa": "true", "$": "Auer, Peter"}, {"@_fa": "true", "$": "Burgsteiner, Harald"}, {"@_fa": "true", "$": "Maass, Wolfgang"}], "dc:description": "\n               Abstract\n               \n                  One may argue that the simplest type of neural networks beyond a single perceptron is an array of several perceptrons in parallel. In spite of their simplicity, such circuits can compute any Boolean function if one views the majority of the binary perceptron outputs as the binary output of the parallel perceptron, and they are universal approximators for arbitrary continuous functions with values in \n                        \n                           [\n                           0\n                           ,\n                           1\n                           ]\n                        \n                      if one views the fraction of perceptrons that output 1 as the analog output of the parallel perceptron. Note that in contrast to the familiar model of a \u201cmulti-layer perceptron\u201d the parallel perceptron that we consider here has just binary values as outputs of gates on the hidden layer. For a long time one has thought that there exists no competitive learning algorithm for these extremely simple neural networks, which also came to be known as committee machines. It is commonly assumed that one has to replace the hard threshold gates on the hidden layer by sigmoidal gates (or RBF-gates) and that one has to tune the weights on at least two successive layers in order to achieve satisfactory learning results for any class of neural networks that yield universal approximators. We show that this assumption is not true, by exhibiting a simple learning algorithm for parallel perceptrons \u2014 the parallel delta rule (\n                        p\n                     -delta rule). In contrast to backprop for multi-layer perceptrons, the \n                        p\n                     -delta rule only has to tune a single layer of weights, and it does not require the computation and communication of analog values with high precision. Reduced communication also distinguishes our new learning rule from other learning rules for parallel perceptrons such as MADALINE. Obviously these features make the \n                        p\n                     -delta rule attractive as a biologically more realistic alternative to backprop in biological neural circuits, but also for implementations in special purpose hardware. We show that the \n                        p\n                     -delta rule also implements gradient descent\u2013with regard to a suitable error measure\u2013although it does not require to compute derivatives. Furthermore it is shown through experiments on common real-world benchmark datasets that its performance is competitive with that of other learning approaches from neural networks and machine learning. It has recently been shown [Anthony, M. (2007). On the generalization error of fixed combinations of classifiers. Journal of Computer and System Sciences 73(5), 725\u2013734; Anthony, M. (2004). On learning a function of perceptrons. In Proceedings of the 2004 IEEE international joint conference on neural networks (pp. 967\u2013972): Vol. 2] that one can also prove quite satisfactory bounds for the generalization error of this new learning rule.\n               \n            ", "openaccess": "0", "openaccessArticle": false, "openaccessType": null, "openArchiveArticle": false, "openaccessSponsorName": null, "openaccessSponsorType": null, "openaccessUserLicense": null, "dcterms:subject": [{"@_fa": "true", "$": "Learning algorithm"}, {"@_fa": "true", "$": "Parallel delta rule"}, {"@_fa": "true", "$": "Parallel perceptrons"}, {"@_fa": "true", "$": "Committee machines"}, {"@_fa": "true", "$": "Reduced communication"}], "link": [{"@href": "https://api.elsevier.com/content/article/pii/S0893608007002730", "@rel": "self", "@_fa": "true"}, {"@href": "https://www.sciencedirect.com/science/article/pii/S0893608007002730", "@rel": "scidir", "@_fa": "true"}]}, "scopus-id": "44649129329", "scopus-eid": "2-s2.0-44649129329", "pubmed-id": "18249524", "link": {"@href": "https://api.elsevier.com/content/abstract/scopus_id/44649129329", "@rel": "abstract"}, "originalText": {"xocs:doc": {"xocs:meta": {"xocs:open-access": {"xocs:oa-article-status": {"@is-open-access": "0", "@is-open-archive": "0"}}, "xocs:available-online-date": {"@yyyymmdd": "20071231", "$": "2007-12-31"}}}}}